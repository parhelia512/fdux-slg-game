void receiverVP(
    float4	position		: POSITION,
	float4	normal			: NORMAL,
 
    out float4 outPos		: POSITION,
    out float4 outShadowUV	: TEXCOORD0,
 
    uniform float4x4 world,
    uniform float4x4 worldViewProj,
    uniform float4x4 texView,
	uniform float4x4 texProj,
	uniform float3 shadowDir
    )
{
    float4 worldPos = mul(world, position);
    outPos = mul(worldViewProj, position);
	float4x4 texViewProj = mul(texProj, texView);
    outShadowUV = mul(texViewProj,worldPos);
}
 
void receiverFP(
    float4 position		: POSITION,
    float4 shadowUV		: TEXCOORD0,
 
    uniform sampler2D shadowMap : register(s0),
	uniform float depthOffset,
 
    out float4 result        : COLOR)
{
	float lightDist = shadowUV.z ;
	lightDist -= depthOffset;
	shadowUV.xy = shadowUV.xy / shadowUV.w;
	float depth = tex2D(shadowMap, shadowUV.xy).x;
	float4 depths = float4(tex2D(shadowMap, shadowUV.xy + float2(-0.001,0)).x,
							tex2D(shadowMap, shadowUV.xy + float2(0.001,0)).x,
							tex2D(shadowMap, shadowUV.xy + float2(0,0.001)).x,
							tex2D(shadowMap, shadowUV.xy + float2(0,-0.001)).x);
	float shadow = (lightDist >= depth? 0.5:1);
	shadow += (lightDist >= depths.x? 0.5:1);
	shadow += (lightDist >= depths.y? 0.5:1);
	shadow += (lightDist >= depths.z? 0.5:1);
	shadow += (lightDist >= depths.w? 0.5:1);
	shadow *= 0.2;
	result = float4(shadow,shadow,shadow,1);
}